var CubeGame=function(){};CubeGame.config={Font:"Lato",ScrollVelocity:-450,Gravity:800,JumpVelocity:-300,AtlasSettings:{Name:"Textures",JSON:"Textures.json",Img:"Textures.png"},Game:null},CubeGame.Boot=function(){},CubeGame.Boot.prototype={startSetup:function(){this.game.state.start("Setup")},preload:function(){this.game.stage.backgroundColor="#eeeeee";var a=this;this.game.load.script("webfont","//ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js"),this.scale.scaleMode=Phaser.ScaleManager.SHOW_ALL,this.scale.pageAlignHorizontally=!0,CubeGame.config.Game=this.game,WebFontConfig={active:function(){a.startSetup()},google:{families:[CubeGame.config.Font+":400,700"]}}}},CubeGame.Setup=function(){},CubeGame.Setup.prototype={preload:function(){this.loaded=this.game.add.text(400,250,"Loading",{font:"50px "+CubeGame.config.Font,fill:"#5f5f5f"});var a=CubeGame.config.AtlasSettings;this.game.load.atlasJSONHash(a.Name,a.Img,a.JSON),this.game.load.audio("Ping",["Audio/Ping.ogg"])},create:function(){this.loaded.setText("Loaded!");var a=this;this.game.time.events.add(2e3,function(){a.game.state.start("Menu")})}},CubeGame.Menu=function(){},CubeGame.Menu.prototype={preload:function(){},create:function(){this.game.stage.backgroundColor="#eeeeee",this.logo=this.game.add.sprite(250,100,"Textures","Logo"),this.playButton=this.game.add.button(400,350,"Textures",this.startPlay,this),this.playButton.frameName="PlayButton",this.helpText=this.game.add.text(250,70,"Click with mouse to jump",{font:"30px "+CubeGame.config.Font,fill:"#5f5f5f"}),this.logoBounceIn=this.game.add.tween(this.logo).from({y:-300},500,Phaser.Easing.Sinusoidal.Out).start(),this.logoUpDown=this.game.add.tween(this.logo).to({y:120},500,Phaser.Easing.Linear.None).to({y:100},500,Phaser.Easing.Linear.None).loop(!0),this.logoBounceIn.chain(this.logoUpDown),this.helpTextSlideIn=this.game.add.tween(this.helpText).from({x:-300},500,Phaser.Easing.Sinusoidal.Out).start(),this.playButtonSlideIn=this.game.add.tween(this.playButton).from({x:-300},500,Phaser.Easing.Sinusoidal.Out).start()},startPlay:function(){this.game.state.start("Play")},update:function(){}},CubeGame.Play=function(){},CubeGame.Play.prototype={create:function(){this.game.physics.startSystem(Phaser.Physics.ARCADE),this.game.physics.arcade.gravity.y=CubeGame.config.Gravity,this.game.stage.backgroundColor="#eeeeee",this.ground=new CubeGame.Ground(this.game),this.game.add.existing(this.ground),this.player=new CubeGame.Player(this.game,this.ground),this.game.add.existing(this.player),this.ping=this.game.add.audio("Ping"),this.ping.play(),this.addEventListeners(),this.obstacles=new CubeGame.Obstacles(this.game),this.game.add.existing(this.obstacles),CubeGame.ScoreManager.resetScore(),this.scoreText=this.game.add.text(40,20,"Score: "+CubeGame.score.toString(),{font:"40px "+CubeGame.config.Font,fill:"#5f5f5f"}),this.scoreTextSlideIn=this.game.add.tween(this.scoreText).from({x:-300},300,Phaser.Easing.Sinusoidal.Out).start(),CubeGame.config.spawnIntervals=[{score:40,interval:1e3},{score:100,interval:800},{score:140,interval:700}],CubeGame.obstacleTypes=["Laser","Spikes"],this.game.time.events.loop(1e3,this.updateScore,this)},addEventListeners:function(){this.input.onDown.add(this.player.jump,this.player),CubeGame.deadSignal.add(this.die,this)},die:function(){this.game.state.start("GameOver")},updateScore:function(){CubeGame.ScoreManager.increaseScore(10)},updateScoreText:function(){this.scoreText.setText("Score: "+CubeGame.score)},update:function(){this.player.initObstacleCollisions(this.obstacles),this.updateScoreText()}},CubeGame.GameOver=function(){},CubeGame.GameOver.prototype={preload:function(){},create:function(){this.game.stage.backgroundColor="#eeeeee",this.gameOverGroup=this.game.add.group(),this.buttonsGroup=this.game.add.group(),this.scoreIs=this.game.add.text(150,50,"You got",{font:"30px "+CubeGame.config.Font,fill:"#5f5f5f"});var a=CubeGame.score.toString()+" pts";this.points=this.game.add.text(150,120,a,{font:"bold 120px "+CubeGame.config.Font,fill:"#3498db"}),this.gameOverGroup.add(this.scoreIs),this.gameOverGroup.add(this.points),this.gameOverSlideIn=this.game.add.tween(this.gameOverGroup).from({x:-300},200,Phaser.Easing.Sinusoidal.Out).start(),this.replayButton=this.game.add.button(300,400,"Textures",this.startPlay,this),this.replayButton.frameName="PlayButton",this.menuButton=this.game.add.button(500,400,"Textures",this.gotoMenu,this),this.menuButton.frameName="MenuButton",this.buttonsGroup.add(this.replayButton),this.buttonsGroup.add(this.menuButton),this.buttonsSlideIn=this.game.add.tween(this.buttonsGroup).from({x:CubeGame.PageW+200},500,Phaser.Easing.Sinusoidal.Out).start()},startPlay:function(){this.game.state.start("Play")},gotoMenu:function(){this.game.state.start("Menu")},update:function(){}},CubeGame.Obstacles=function(a){Phaser.Group.call(this,a),this.spawner=this.game.time.events.loop(1400,this.spawn,this)},CubeGame.Obstacles.prototype=Object.create(Phaser.Group.prototype),CubeGame.Obstacles.prototype.constructor=CubeGame.Obstacles,CubeGame.Obstacles.prototype.fetchObstacle=function(a,b,c,d){var e=this.getFirstExists(!1);e||(e=new CubeGame.Obstacle(a,0,0),this.add(e)),e.reuse(a,b,c,d)},CubeGame.Obstacles.prototype.update=function(){var a;for(i=0;i<CubeGame.config.spawnIntervals.length;i++)a=CubeGame.config.spawnIntervals[i],CubeGame.score===a.score&&(this.spawner.delay=a.interval)},CubeGame.Obstacles.prototype.spawn=function(){var a=this.game.rnd.integerInRange(0,1),b=this.game.rnd.integerInRange(50,CubeGame.PageH-150);this.fetchObstacle(this.game,CubeGame.PageW,b,CubeGame.obstacleTypes[a])},CubeGame.Player=function(a,b){Phaser.Sprite.call(this,a,250,CubeGame.PageH/3,"Textures","Player"),a.physics.arcade.enable(this),this.ground=b},CubeGame.Player.prototype=Object.create(Phaser.Sprite.prototype),CubeGame.Player.prototype.constructor=CubeGame.Player,CubeGame.Player.prototype.jump=function(){this.body.velocity.y=CubeGame.config.JumpVelocity},CubeGame.Player.prototype.initObstacleCollisions=function(a){this.game.physics.arcade.collide(this,a,function(){CubeGame.deadSignal.dispatch()})},CubeGame.Player.prototype.update=function(){this.game.physics.arcade.overlap(this,this.ground,function(){CubeGame.deadSignal.dispatch()}),this.y<0&&CubeGame.deadSignal.dispatch()},CubeGame.Obstacle=function(a,b,c){Phaser.Sprite.call(this,a,b,c,"Textures","Laser")},CubeGame.Obstacle.prototype=Object.create(Phaser.Sprite.prototype),CubeGame.Obstacle.prototype.constructor=CubeGame.Obstacle,CubeGame.Obstacle.prototype.update=function(){this.checkWorldBounds()},CubeGame.Obstacle.prototype.checkWorldBounds=function(){!this.inWorld&&this.exists&&this.kill()},CubeGame.Obstacle.prototype.reuse=function(a,b,c,d){this.reset(b,c),this.hasScored=!1,this.frameName=d,this.anchor.setTo(0,1),a.physics.arcade.enable(this),this.body.allowGravity=!1,this.hasScored=!1,this.body.velocity.x=CubeGame.config.ScrollVelocity},CubeGame.Obstacle.prototype.stop=function(){this.body.velocity.x=0},CubeGame.Ground=function(a){Phaser.TileSprite.call(this,a,0,CubeGame.PageH,CubeGame.PageW,100,"Textures","Ground"),this.autoScroll(CubeGame.config.ScrollVelocity,0),this.anchor.setTo(0,1),a.physics.arcade.enable(this),this.body.immovable=!0,this.body.allowGravity=!1},CubeGame.Ground.prototype=Object.create(Phaser.TileSprite.prototype),CubeGame.Ground.prototype.constructor=CubeGame.Ground,CubeGame.Ground.prototype.stop=function(){this.autoScroll(0,0)},CubeGame.deadSignal=new Phaser.Signal,CubeGame.ScoreManager=function(){},CubeGame.ScoreManager.increaseScore=function(a){CubeGame.score+=a},CubeGame.ScoreManager.resetScore=function(){CubeGame.score=0};